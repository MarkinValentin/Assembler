#include <iostream>
#include <cmath>
#include <random>
#include <vector>
#include <algorithm>
#include <chrono>
#include <random>

// Функция для генерации данных с использованием стандартной функции генерации в C++
std::vector<double> generateUsingStandardNormalDistribution(int size) {
    std::vector<double> data;
    std::default_random_engine generator;
    std::normal_distribution<double> distribution(0.0, 1.0);
    for (int i = 0; i < size; ++i) {
        data.push_back(distribution(generator));
    }
    return data;
}

// Функция для проведения теста Колмогорова-Смирнова
void performKolmogorovSmirnovTest(const std::vector<double>& data1, const std::vector<double>& data2) {
    // Реализация теста Колмогорова-Смирнова
    // ...
}

// Функция для проведения теста Шапиро-Уилка
void performShapiroWilkTest(const std::vector<double>& data) {
    // Реализация теста Шапиро-Уилка
    // ...
}

int main() {
    const int N = 1000; // Размер выборки

    // Создание генератора белого гауссовского шума
    WhiteNoiseGenerator generator;

    // Генерация данных с использованием созданного генератора
    std::vector<double> generatedData;
    for (int i = 0; i < N; ++i) {
        generatedData.push_back(generator.generate());
    }

    // Генерация данных с использованием стандартной функции в C++
    std::vector<double> standardData = generateUsingStandardNormalDistribution(N);

    // Проведение статистического теста на сравнение данных
    performKolmogorovSmirnovTest(generatedData, standardData);
    performShapiroWilkTest(generatedData);

    return 0;
}
