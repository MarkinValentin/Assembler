#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/lte-module.h"
#include "ns3/internet-module.h"
#include "ns3/applications-module.h"

using namespace ns3;

int main (int argc, char *argv[])
{
  // Создаем объект симулятора
  Ptr<LteHelper> lteHelper = CreateObject<LteHelper> ();

  // Настройка параметров сети LTE
  Ptr<PointToPointEpcHelper> epcHelper = CreateObject<PointToPointEpcHelper> ();
  lteHelper->SetEpcHelper (epcHelper);

  // Создаем eNB
  NodeContainer enbNodes;
  enbNodes.Create (1);
  NetDeviceContainer enbDevs;
  enbDevs = lteHelper->InstallEnbDevice (enbNodes);

  // Создаем абонента
  NodeContainer ueNodes;
  ueNodes.Create (1);
  NetDeviceContainer ueDevs;
  ueDevs = lteHelper->InstallUeDevice (ueNodes);

  // Установка трафика Full Buffer
  BulkSendHelper ftp ("ns3::TcpSocketFactory", InetSocketAddress (Ipv4Address ("255.255.255.255"), 9));
  ftp.SetAttribute ("MaxBytes", UintegerValue (0xffffffff));
  ApplicationContainer clientApps = ftp.Install (ueNodes.Get(0));
  clientApps.Start (Seconds (1.0));
  clientApps.Stop (Seconds (10.0));

  // Настройка планировщика
  lteHelper->SetSchedulerType ("ns3::TdMtFfMacScheduler");

  // Включаем вывод ключевых характеристик с RLC и MAC уровня
  lteHelper->EnableMacTraces ();
  lteHelper->EnableRlcTraces ();

  // Запуск симуляции
  Simulator::Stop (Seconds (10.0));
  Simulator::Run ();
  Simulator::Destroy ();

  return 0;
}
