import ns.applications
import ns.core
import ns.internet
import ns.lte
import ns.mobility
import ns.network
import ns.point_to_point

def main():
    # Создание симулятора
    ns.core.GlobalValue.Bind("SimulatorImplementationType", ns.core.StringValue("ns3::PySimulatorImpl"))
    ns.core.GlobalValue.Bind("ChecksumEnabled", ns.core.BooleanValue(True))
    ns.core.LogComponentEnableAll(ns.core.LOG_LEVEL_INFO)
    
    # Создание узлов eNB и двух абонентов
    enbNode = ns.network.Node()
    ueNodes = ns.network.NodeContainer()
    ueNodes.Create(2)
    
    # Создание устройств LTE
    enbDevs = ns.lte.NetDeviceContainer()
    ueDevs = ns.lte.NetDeviceContainer()
    
    # Конфигурация трафика Full Buffer
    for i in range(2):
        ueDevs.Add(ns.lte.LteDevice())
    
    # Настройка планировщика пакетов
    lteHelper = ns.lte.LteHelper()
    lteHelper.SetSchedulerType("ns3::TdMtFfMacScheduler")
    
    # Включение трассировки для вывода характеристик RLC и MAC уровней
    lteHelper.EnableRlcTraces()
    lteHelper.EnableMacTraces()
    
    # Запуск симуляции и запись вывода в файл
    ns.core.Simulator.Stop(ns.core.Seconds(10))
    ns.core.Simulator.Run()
    ns.core.Simulator.Destroy()

if __name__ == "__main__":
    main()
