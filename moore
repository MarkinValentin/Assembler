#include <stdio.h>

// Состояния автомата
typedef enum {
    WAITING_FOR_COIN,
    WAITING_FOR_SELECTION,
    DISPENSING,
    OUT_OF_STOCK
} State;

// Виды продуктов
typedef enum {
    PRODUCT_1,
    PRODUCT_2
} Product;

// Структура для вендингового автомата
typedef struct {
    State state;
    int balance;
    int product_prices[2];
    int product_quantities[2];
} VendingMachine;

// Инициализация вендингового автомата
void init(VendingMachine *vm) {
    vm->state = WAITING_FOR_COIN;
    vm->balance = 0;
    vm->product_prices[PRODUCT_1] = 3;
    vm->product_prices[PRODUCT_2] = 9;
    vm->product_quantities[PRODUCT_1] = 10;
    vm->product_quantities[PRODUCT_2] = 5;
}

// Вставка монеты
void insert_coin(VendingMachine *vm, int coin) {
    if (coin == 1 || coin == 2 || coin == 5 || coin == 10) {
        vm->balance += coin;
        vm->state = WAITING_FOR_SELECTION;
    } else {
        printf("Недопустимая монета. Возвращаем её.\n");
    }
}

// Выбор продукта
void select_product(VendingMachine *vm, Product product) {
    if (vm->state != WAITING_FOR_SELECTION) {
        printf("Сначала внесите монету.\n");
        return;
    }

    if (vm->product_quantities[product] == 0) {
        printf("Выбранный товар закончился.\n");
        vm->state = OUT_OF_STOCK;
        return;
    }

    if (vm->balance < vm->product_prices[product]) {
        printf("Недостаточно средств для покупки выбранного товара.\n");
        return;
    }

    vm->balance -= vm->product_prices[product];
    vm->product_quantities[product]--;
    printf("Товар успешно приобретён. Ваш баланс: %d\n", vm->balance);
    vm->state = DISPENSING;
}

// Возврат сдачи
void return_change(VendingMachine *vm) {
    printf("Возврат сдачи: %d\n", vm->balance);
    vm->balance = 0;
}

int main() {
    VendingMachine vm;
    init(&vm);

    insert_coin(&vm, 5);
    select_product(&vm, PRODUCT_1);
    return_change(&
